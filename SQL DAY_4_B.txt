create table emp(empno number(4,0)
not null,
    ename varchar2(10),
    job varchar2(9),
    MGR number(4,0),
    HIREDATE DATE,
    SAL NUMBER(7,2),
    COMM NUMBER(7,2),
    DEPTNO NUMBER(2,0));
INSERT INTO EMP(SELECT *FROM 
SCOTT.EMP);

--WHAT IS VIEW ?
	-- VIRTUAL TABLE
	-- IS USEFUL FOR FINE GRAINED ACCESS CONTROL
	-- TYPES OF VIEW
		--SIMPLE VIEW --> BUILT ON A SINGLE TABLE -->NO ANY AGGREGATION, JOIN, ANY FUNCTION IS APPLIED ON THE DATA FROM BASE
		--COMPLEX VIEW --> RESULT OF AGGREGATION, JOIN OR SOME FUNCTIONS ON THE BASE TABLE/S
CREATE VIEW DEPT_10_VIEW AS SELECT * FROM EMP WHERE DEPTNO=10;
DROP VIEW DEPT_10_VIEW;

CREATE OR REPLACE VIEW DEPT_10_VIEW AS SELECT * FROM EMP WHERE DEPTNO=10;

ALTER VIEW DEPT_10_VIEW ADD TEST COL NUMBER; --ALTER OPERATION IS NOT APPLICABLE FOR VIEWS

SELECT * FROM DEPT_10_VIEW;

INSERT INTO DEPT_10_VIEW 
    VALUES(9999,'DNYANESH', 'ANALYST', 7839, '04-JUL-22',1000,NULL,10);

SELECT* FROM EMP;

INSERT INTO DEPT_10_VIEW VALUES(8888,'RAHUL', 'ANALYST', 7839, '04-JUL-22',1000,NULL,20);

DELETE FROM DEPT_10_VIEW WHERE EMPNO=8888;

CREATE OR REPLACE VIEW DEPT_10_VIEW AS SELECT * FROM EMP WHERE DEPTNO=10 WITH READ ONLY;
INSERT INTO DEPT_10_VIEW 
    VALUES(9999,'DNYANESH', 'ANALYST', 7839, '04-JUL-22',1000,NULL,10); --cannot perform a DML operation on a read-only view 

CREATE OR REPLACE VIEW DEPT_10_VIEW AS SELECT * FROM EMP WHERE DEPTNO=10 WITH CHECK OPTION;
INSERT INTO DEPT_10_VIEW 
    VALUES(9999,'DNYANESH', 'ANALYST', 7839, '04-JUL-22',1000,NULL,10); 
SELECT * FROM DEPT_10_VIEW;
INSERT INTO DEPT_10_VIEW VALUES(7777,'RAHUL', 'ANALYST', 7839, '04-JUL-22',1000,NULL,20); --view WITH CHECK OPTION where-clause violation 
-- INCREASE THE SAL OF KING BY 10% IN THE VIEW AND CHECK IT IN VIEW AS WELL AS TABLE
-- CHANGE JOB OF  FORD 'ANALYST' TO 'SR. ANALYST' IN THE TABLE AND CHECK IT IN VIEW AS WELL AS TABLE

-- UPDATE emp SET sal = sal * 1.10 WHERE ename = 'KING';
-- SELECT* FROM EMP;

--COMPLEX VIEW 
CREATE OR REPLACE VIEW EMP_SUMMARY AS 
    SELECT DEPTNO, COUNT(*) AS TOTAL_EMPLOYEES, MIN(SAL) AS MIN_SAL, MAX(SAL) AS MAX_SAL, 
    SUM(SAL) AS TOTAL_SAL, AVG(SAL) AS AVG_SAL
    FROM EMP 
    GROUP BY DEPTNO;
SELECT * FROM EMP_SUMMARY;

UPDATE EMP_SUMMARY SET TOTAL_EMPLOYEES=10 WHERE DEPTNO=30; --data manipulation operation not legal on this view 

SELECT * FROM SCOTT.DEPT;

CREATE VIEW EMP_DEPT_DATA AS 
       SELECT * FROM SCOTT.EMP JOIN SCOTT.DEPT USING(DEPTNO);

SELECT * FROM EMP_DEPT_DATA

-------------------------------------------------
--EXPLAIN STATEMENT
-- OPTIMIZATION WITH INDEX

SELECT * FROM EMP;

EXPLAIN PLAN FOR SELECT * FROM EMP WHERE DEPTNO=10;
SELECT * FROM DBMS_XPLAN.DISPLAY();

SELECT * FROM USER_SYNONYMS;

CREATE INDEX DEPT_IDX ON EMP(DEPTNO);
DROP INDEX DEPT_IDX ;

EXPLAIN PLAN FOR SELECT * FROM EMP WHERE DEPTNO=10;
SELECT * FROM DBMS_XPLAN.DISPLAY();

EXPLAIN PLAN FOR SELECT * FROM EMP WHERE JOB='MANAGER';
SELECT * FROM DBMS_XPLAN.DISPLAY();

EXPLAIN PLAN FOR SELECT * FROM SCOTT.EMP CROSS JOIN SCOTT.DEPT;
SELECT * FROM DBMS_XPLAN.DISPLAY();

EXPLAIN PLAN FOR SELECT DEPTNO, COUNT(*) AS TOTAL_EMPLOYEES, MIN(SAL) AS MIN_SAL, MAX(SAL) AS MAX_SAL, 
    SUM(SAL) AS TOTAL_SAL, AVG(SAL) AS AVG_SAL
    FROM EMP 
    GROUP BY DEPTNO;
SELECT * FROM DBMS_XPLAN.DISPLAY();